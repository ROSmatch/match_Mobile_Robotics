name: ROS 1 Simulation Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    workflow_dispatch: # allow manually starting this workflow

jobs:
  gazebo-test:
    runs-on: ubuntu-latest
    container:
      image: ros:noetic  # Verwende dein ROS 1 Docker-Image (z.B. ros:melodic)
    env:
      DISPLAY: ":99"  # Erforderlich für die headless Gazebo-Umgebung
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup ROS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-rosdep python3-catkin-tools gazebo9
        sudo rosdep init
        rosdep update

    - name: Install dependencies
      run: |
        rosdep install --from-paths src --ignore-src -r -y

    - name: Build the workspace
      run: |
        source /opt/ros/noetic/setup.bash
        catkin_make

    - name: Start Gazebo headless
      run: |
        source devel/setup.bash
        # Xvfb startet einen virtuellen Display-Server
        Xvfb :99 -screen 0 1920x1080x16 &
        sleep 5  # Kurze Pause, damit Xvfb und Gazebo initialisiert werden
        roslaunch roslaunch mir_examples single_mir_600.launch gui:=false &
        sleep 30  # Warte, bis Gazebo vollständig gestartet ist

    - name: Check if robot spawns
      run: |
        # Überprüfe, ob das Robotermodel erfolgreich geladen wurde
        rostopic echo -n1 /mir_pose_stamped_simple  # Beispieltopic, je nach Robotermodell anpassen
        sleep 5

    - name: Shut down ROS
      run: |
        killall -9 roslaunch
